utils.getFile <- function(file){
if(is.na(file)){
sinfo <- Sys.info()
if(sinfo[['sysname']] == 'Linux'){
myfile <- utils.my.file.browse()
} else {
myfile <- file.choose()
}
myfilename <- paste(strsplit(myfile,'\\',fixed=TRUE)[[1]],collapse='/')
myfile_dir <- paste(strsplit(myfile,'/')[[1]][1:(length(strsplit(myfile,'/')[[1]])-1)],collapse = '/')
} else {}
myfile <- list(filename = myfilename, dir = myfile_dir)
return(myfile)
}
utils.my.file.browse <- function (root=getwd(), multiple=F) {
# .. and list.files(root)
x <- c( dirname(normalizePath(root)), list.files(root,full.names=T) )
isdir <- file.info(x)$isdir
obj <- sort(isdir,index.return=T,decreasing=T)
isdir <- obj$x
x <- x[obj$ix]
lbls <- sprintf('%s%s',basename(x),ifelse(isdir,'/',''))
lbls[1] <- sprintf('../ (%s)', basename(x[1]))
files <- c()
sel = -1
while ( TRUE ) {
sel <- menu(lbls,title=sprintf('Select file(s) (0 to quit) in folder %s:',root))
if (sel == 0 )
break
if (isdir[sel]) {
# directory, browse further
files <- c(files, my.file.browse( x[sel], multiple ))
break
} else {
# file, add to list
files <- c(files,x[sel])
if ( !multiple )
break
# remove selected file from choices
lbls <- lbls[-sel]
x <- x[-sel]
isdir <- isdir[-sel]
}
}
return(files)
}
mm = utils.getFile(NA)
mm
myfilepath <- mm$filename
myfile_dir <- paste(strsplit(myfilepath,'/')[[1]][1:(length(strsplit(myfile,'/')[[1]])-1)],collapse = '/')
myfile_dir <- paste(strsplit(myfilepath,'/')[[1]][1:(length(strsplit(myfilepath,'/')[[1]])-1)],collapse = '/')
myfile_dir
strsplit(myfilepath,sep = '/')
strsplit(myfilepath, '/')
strsplit(myfilepath, '/')[[1]]
strsplit(myfilepath, '/')[[1]][end]
spl <- strsplit(myfilepath,'/')
spl <- strsplit(myfilepath,'/')[[1]]
spl
myfile_path <- myfilepath
spl <- strsplit(myfile_path,'/')[[1]]
myfile_name <- spl[[length(spl)]]
myfile_dir <- paste(spl[1:(length(spl)-1)],collapse = '/')
myfile_name
myfile_dir
utils.getFile <- function(file){
if(is.na(file)){
sinfo <- Sys.info()
if(sinfo[['sysname']] == 'Linux'){
file <- utils.my.file.browse()
} else {
file <- file.choose()
}
}
myfile_path <- paste(strsplit(file,'\\',fixed=TRUE)[[1]],collapse='/')
spl <- strsplit(myfile_path,'/')[[1]]
myfile_name <- spl[[length(spl)]]
myfile_dir <- paste(spl[1:(length(spl)-1)],collapse = '/')
myfile <- list(path = myfile_path, filename = myfile_name, dir = myfile_dir)
return(myfile)
}
utils.getFile(NA)
devtools::load_all()
rm(list = c("utils.getFile", "utils.my.file.browse"))
devtools::load_all()
loadContacts()
devtools::load_all()
loadContacts()
type('hi')
typeof('hi')
class('hi')
class('NA')
class(NA)
a <- c('1' , '2')
b <- c('2','3','4')
a %in% b
all(a %in% b)
sprintf('these %s are projects',a)
sprintf('these %s are projects',paste(a,sep = ','))
sprintf('these %s are projects',paste(a,collapse = ','))
myfun <- function(){}
myfun <- function(){disp('danger');disp('hi')}
myfun
myfun()
myfun <- function(){print('danger');print('hi')}
myfun()
myfun <- function(){warning('danger');print('hi')}
myfun()
source("~/GitHub/jbartolotti/xnatNotify/R/process.R")
Sys.time()
sprintf('Hello, %s\n\nPROJECT ID: %s\nREPORT GENERATED ON: %s\n\n','James',123,Sys.time())
devtools::document()
install.packages('sendmailR')
devtools::document()
rm(list = c("PROCESS.getProjects"))
devtools::document()
devtools::document()
devtools::document()
dv_names <- dir(file.path(rundir,r))
devtools::document()
devtools::document()
